@page "/wasm/modules"
@using System.Reflection
@using OpenCodeDev.Blazor.Foundation.Doc.Core.Components.Containers.Section;
@using OpenCodeDev.Blazor.Foundation.Components.Controls;
@using OpenCodeDev.Blazor.Foundation.Components.Containers;

@using Microsoft.Extensions.Localization;
@using OpenCodeDev.Blazor.Foundation.Doc.Core.Shared.Resources;
@inject IStringLocalizer<Resource> Localized;

<SectionWrapper>
    <SectionLeft>
        <h2>@Localized["Load_Module_Title"]</h2>
        <p>@Localized["Load_Module_Subtitle"]</p>
        <TableWrapper Striped=true>
            <TableHeader>
                <TableHeaderItem>@Localized["Module_Assembly"]</TableHeaderItem>
                <TableHeaderItem>@Localized["Module_Version"]</TableHeaderItem>
            </TableHeader>
            <TableBody>
            @foreach (var item in GetAssemblies())
            {
                <TableBodyRow>
                    <TableBodyRowItem>@item.Name</TableBodyRowItem>
                    <TableBodyRowItem>@item.Version.ToString(4)</TableBodyRowItem>
                </TableBodyRow>
            }
            </TableBody>
        </TableWrapper>
        <hr />
    </SectionLeft>
</SectionWrapper>


@code {
    private AssemblyName[] GetAssemblies()
    {
        return this.GetType().Assembly.GetReferencedAssemblies()
        .Where(p => !p.Name.StartsWith("System.") && !p.Name.StartsWith("Microsoft.")).OrderBy(p=>p.Name).ToArray();
    }
}
