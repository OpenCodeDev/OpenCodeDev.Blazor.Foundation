@page "/reveal";

@using OpenCodeDev.Blazor.Foundation.Doc.Core.Components.Containers.Section;
@using OpenCodeDev.Blazor.Foundation.Components.Controls;
@using OpenCodeDev.Blazor.Foundation.Components.Containers;

<SectionWrapper>
    <SectionLeft>
        <h2>Reveal</h2>
        <p>Modal dialogs, or pop-up windows, are handy for prototyping and production. Blazor Foundation includes Reveal, our modal plugin, to make this easy for you.</p>
        <hr />
    </SectionLeft>
</SectionWrapper>

<SectionWrapper>
    <SectionLeft>
        <h2>Basics</h2>
        <p>A modal is just an empty container, so you can put any kind of content inside it, from text to forms to video to an entire grid.</p>
        <p>To create a modal, use the <Code>Reavel</Code> component and a unique ID.</p>

        <HighlightCS Language="html" Full="true" HeaderIcon="mdi-language-html5" HeaderBGcolor="#5d2b90" HeaderTitle="Razor"
                     Content="PFJldmVhbCBJZD0iZXhhbXBsZU1vZGFsMSI+Cgk8aDE+QXdlc29tZS4gSSBIYXZlIEl0LjwvaDE+Cgk8cCBjbGFzcz0ibGVhZCI+WW91ciBjb3VjaC4gSXQgaXMgbWluZS48L3A+Cgk8cD5JJ20gYSBjb29sIHBhcmFncmFwaCB0aGF0IGxpdmVzIGluc2lkZSBvZiBhbiBldmVuIGNvb2xlciBtb2RhbC4gV2lucyE8L3A+CjwvUmV2ZWFsPg==" />

        <OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal Id="exampleModal1">
            <h1>Awesome. I Have It.</h1>
            <p class="lead">Your couch. It is mine.</p>
            <p>I'm a cool paragraph that lives inside of an even cooler modal. Wins!</p>
        </OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal>

        <p>You'll also need a way to open the modal. Add the attribute <Code>data-open</Code> to any element or you can use <Code>DataToggle</Code> for <Code>Button</Code>. The value of data-open should be the <Code>Id</Code> of the modal.</p>

        <HighlightCS Language="html" Full="true" HeaderIcon="mdi-language-html5" HeaderBGcolor="#5d2b90" HeaderTitle="Razor"
                     Content="PEJ1dHRvbiBkYXRhLW9wZW49ImV4YW1wbGVNb2RhbDEiPkNsaWNrIG1lIGZvciBhIG1vZGFsPC9CdXR0b24+" />

        <Button data-open="exampleModal1">Click me for a modal</Button>

        <p>The attribute <Code>CloseXButton</Code> give a way to close the modal from inside by a click in the cross icon but by default it's set to <Code>true</Code>. By default, modals will close if clicked outside of, or if the esc key is pressed.</p>
        <hr />
    </SectionLeft>
</SectionWrapper>

<SectionWrapper>
    <SectionLeft>
        <h2>Sizing</h2>
        <p>On small screens, a modal is always 100% of the width of the screen. On medium-sized screens and larger, the width changes to 600px</p>
        <p>The size of a modal can be changed with these sizing classes, which are added to the <Code>Reveal</Code> component:</p>
        <ul>
            <li><Code>tiny</Code> : 30% wide</li>
            <li><Code>small</Code> : 50% wide</li>
            <li><Code>large</Code> : 90% wide</li>
            <li><Code>full</Code> : 100% width and height.</li>
        </ul>

        <HighlightCS Language="html" Full="true" HeaderIcon="mdi-language-html5" HeaderBGcolor="#5d2b90" HeaderTitle="Razor"
                     Content="PFJldmVhbCBDbGFzcz0idGlueSIgSWQ9ImV4YW1wbGVNb2RhbFRpbnkiPgogICAgPHA+T0ggSSdNIFNPIFRJSUlOWTwvcD4KPC9SZXZlYWw+CjxSZXZlYWwgQ2xhc3M9InNtYWxsIiBJZD0iZXhhbXBsZU1vZGFsU21hbGwiPgoJPHA+SSBtYXkgYmUgc21hbGwsIGJ1dCBJJ3ZlIGdvdCBhIGJpZyBoZWFydCE8L3A+CjwvUmV2ZWFsPgo8UmV2ZWFsIENsYXNzPSJsYXJnZSIgSWQ9ImV4YW1wbGVNb2RhbExhcmdlIj4KCTxwPkknbSBiaWcsIGxpa2UgYmVhciE8L3A+CjwvUmV2ZWFsPgo8UmV2ZWFsIENsYXNzPSJmdWxsIiBJZD0iZXhhbXBsZU1vZGFsRnVsbCI+Cgk8cD5JJ20gYmlnLCBtb3JlIHRoYW4gYSBiZWFyLCBpJ20gbGlrZSB0aGUgc2t5ITwvcD4KPC9SZXZlYWw+Cgo8QnV0dG9uIGRhdGEtb3Blbj0iZXhhbXBsZU1vZGFsVGlueSI+Q2xpY2sgbWUgZm9yIGEgdGlueSBtb2RhbDwvQnV0dG9uPgo8QnV0dG9uIGRhdGEtb3Blbj0iZXhhbXBsZU1vZGFsU21hbGwiPkNsaWNrIG1lIGZvciBhIHNtYWxsIG1vZGFsPC9CdXR0b24+CjxCdXR0b24gZGF0YS1vcGVuPSJleGFtcGxlTW9kYWxMYXJnZSI+Q2xpY2sgbWUgZm9yIGEgbGFyZ2UgbW9kYWw8L0J1dHRvbj4KPEJ1dHRvbiBkYXRhLW9wZW49ImV4YW1wbGVNb2RhbEZ1bGwiPkNsaWNrIG1lIGZvciBhIGZ1bGwgbW9kYWw8L0J1dHRvbj4=" />

        <OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal Class="tiny" Id="exampleModalTiny">
            <p>OH I'M SO TIIINY</p>
        </OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal>
        <OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal Class="small" Id="exampleModalSmall">
            <p>I may be small, but I've got a big heart!</p>
        </OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal>
        <OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal Class="large" Id="exampleModalLarge">
            <p>I'm big, like bear!</p>
        </OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal>
        <OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal Class="full" Id="exampleModalFull">
            <p>I'm big, more than a bear, i'm like the sky!</p>
        </OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal>

        <p><Button data-open="exampleModalTiny">Click me for a tiny modal</Button></p>
        <p><Button data-open="exampleModalSmall">Click me for a small modal</Button></p>
        <p><Button data-open="exampleModalLarge">Click me for a large modal</Button></p>
        <p><Button data-open="exampleModalFull">Click me for a full modal</Button></p>
        <hr />
    </SectionLeft>
</SectionWrapper>

<SectionWrapper>
    <SectionLeft>
        <h2>Title</h2>
        <p>For add a title to the modal use the attribute <Code>Title</Code>. An icon can be dropped into a title. For do this use the attribute <Code>TitleIcon</Code>. The <Code>TitleIcon</Code> attribute use the <a href="@MaterialIconSiteLink" target="_blank">Material Design Icon</a>.</p>

        <HighlightCS Language="html" Full="true" HeaderIcon="mdi-language-html5" HeaderBGcolor="#5d2b90" HeaderTitle="Razor"
                     Content="PEJ1dHRvbiBEYXRhVG9nZ2xlPSJleGFtcGxlTW9kYWxUaXRsZSI+Q2xpY2sgbWUgZm9yIGEgbW9kYWwgd2l0aCB0aXRsZTwvQnV0dG9uPgoKPFJldmVhbCBUaXRsZT0iTWVzc2FnZSBUaXRsZSIgVGl0bGVJY29uPSJtZGktZW1haWwiICBJZD0iZXhhbXBsZU1vZGFsVGl0bGUiPgoJPHA+TWVzc2FnZSBDb250ZW50IDogSSdtIGEgc2ltcGxlIG1vZGFsIHdpdGggYSB0aXRsZTwvcD4KPC9SZXZlYWw+" />

        <Button DataToggle="exampleModalTitle">Click me for a modal with title</Button>
        <OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal Title="Message Title" TitleIcon="mdi-email" Id="exampleModalTitle">
            <p>Message Content : I'm a simple modal with a title</p>
        </OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal>
        <hr />
    </SectionLeft>
</SectionWrapper>

<SectionWrapper>
    <SectionLeft>
        <h2>Button</h2>
        <p>Blazor Foundation give the possibilty to have easily two buttons in your modal. Use attributes <Code>PrimaryButtonTitle</Code> and <Code>SecondaryButtonTitle</Code>.</p>
        <p>You can use this attributes for add more features to buttons:</p>
        <ul>
            <li><Code>ButtonGroupStyle</Code> : Put any CSS inline for styling the button wrapper. </li>
            <li><Code>PrimaryButtonId</Code> and <Code>SecondaryButtonId</Code> : Give unique ID to you button</li>
            <li><Code>PrimaryButtonClass</Code> and <Code>SecondaryButtonClass</Code> : Give class to your button</li>
            <li><Code>PrimaryButtonStyle</Code> and <Code>SecondaryButtonStyle</Code> : Put any CSS inline for styling your button.</li>
            <li><Code>PrimaryButtonDataToggle</Code> and <Code>SecondaryButtonDataToggle</Code> : id of Foundation element to toggle can be anything. Modal, Switch, Off-Canvas....</li>
            <li><Code>PrimaryButtonOnClick</Code> and <Code>SecondaryButtonOnClick</Code> : Define the Task to call when button is clicked.</li>
            <li><Code>PrimaryButtonOnClickCT</Code> and <Code>SecondaryButtonOnClickCT</Code> : Button Onclick with Close Trigger. if true = "Page is ready to automatically close" and if false = "do not close just yet"</li>
        </ul>

        <HighlightCS Language="html" Full="true" HeaderIcon="mdi-language-html5" HeaderBGcolor="#5d2b90" HeaderTitle="Razor"
                     Content="PEJ1dHRvbiBEYXRhVG9nZ2xlPSJleGFtcGxlTW9kYWxCdXR0b24iPkNsaWNrIG1lIGZvciBhIG1vZGFsIHdpdGggQnV0dG9uPC9CdXR0b24+Cgo8UmV2ZWFsIFRpdGxlPSJNZXNzYWdlIGZyb20gRGFyayBWYWRvciIgVGl0bGVJY29uPSJtZGktZW1haWwiIFByaW1hcnlCdXR0b25UaXRsZT0iWWVzIiBTZWNvbmRhcnlCdXR0b25UaXRsZT0iTm8iIFByaW1hcnlCdXR0b25DbGFzcz0ic3VjY2VzcyByaWdodCIgU2Vjb25kYXJ5QnV0dG9uQ2xhc3M9ImFsZXJ0IHJpZ2h0IiBJZD0iZXhhbXBsZU1vZGFsQnV0dG9uIj4KCTxwPkpvaW4gdGhlIGRhcmsgc2lkZSBvZiB0aGUgZm9yY2UgYW5kIGkgd2lsbCBnaXZlIHlvdSBjb29raWVzLiA6KTwvcD4KPC9SZXZlYWw+" />

        <Button DataToggle="exampleModalButton">Click me for a modal with Button</Button>

        <OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal Title="Message from Darth Vader" TitleIcon="mdi-email" 
                                                                    PrimaryButtonTitle="Yes" SecondaryButtonTitle="No" 
                                                                    PrimaryButtonClass="success right" SecondaryButtonClass="alert right"
                                                                    Id="exampleModalButton">
            <p>Join the dark side of the force and i will give you cookies. :)</p>
        </OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal>
        <hr />
    </SectionLeft>
</SectionWrapper>

<SectionWrapper>
    <SectionLeft>
        <h2>Nested Modal</h2>
        <p>It's possible for modals to open other modals. Create a second modal with a unique ID, and then add a click trigger with <Code>data-open</Code> inside the first modal.</p>

        <HighlightCS Language="html" Full="true" HeaderIcon="mdi-language-html5" HeaderBGcolor="#5d2b90" HeaderTitle="Razor" 
                     Content="PEJ1dHRvbiBkYXRhLW9wZW49ImV4YW1wbGVNb2RhbDIiPkNsaWNrIG1lIGZvciBhIG1vZGFsPC9CdXR0b24+CjwhLS0gVGhpcyBpcyB0aGUgZmlyc3QgbW9kYWwgLS0+CjxSZXZlYWwgSWQ9ImV4YW1wbGVNb2RhbDIiPgoJPGgxPkF3ZXNvbWUhPC9oMT4KCTxwIGNsYXNzPSJsZWFkIj5JIGhhdmUgYW5vdGhlciBtb2RhbCBpbnNpZGUgb2YgbWUhPC9wPgoJPEJ1dHRvbiBkYXRhLW9wZW49ImV4YW1wbGVNb2RhbDMiIGRhdGEtY2xvc2U+Q2xpY2sgbWUgZm9yIGFub3RoZXIgbW9kYWwhPC9CdXR0b24+CjwvUmV2ZWFsPgoKPCEtLSBUaGlzIGlzIHRoZSBuZXN0ZWQgbW9kYWwgLS0+CjxSZXZlYWwgSWQ9ImV4YW1wbGVNb2RhbDMiPgoJPGgyPkFOT1RIRVIgTU9EQUwhISE8L2gyPgo8L1JldmVhbD4K" />
 
        <Button data-open="exampleModal2" >Click me for a modal</Button>

        <!-- This is the first modal -->
        <OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal Id="exampleModal2">
            <h1>Awesome!</h1>
            <p class="lead">I have another modal inside of me!</p>
            <Button data-open="exampleModal3" data-close>Click me for another modal!</Button>
        </OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal>

        <!-- This is the nested modal -->
        <OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal Id="exampleModal3">
            <h2>ANOTHER MODAL!!!</h2>
        </OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal>
        <hr />
    </SectionLeft>
</SectionWrapper>

<SectionWrapper>
    <SectionLeft>
        <h2>Full-screen</h2>
        <p>A full-screen modal is 100% of the width and height of the window. Add the <Code>Class="full"</Code> to make it go.</p>
        <HighlightCS Language="html" Full="true" HeaderIcon="mdi-language-html5" HeaderBGcolor="#5d2b90" HeaderTitle="Razor"
                     Content="PEJ1dHRvbiBkYXRhLW9wZW49ImV4YW1wbGVNb2RhbDgiPkNsaWNrIG1lIGZvciBhIGZ1bGwgbW9kYWw8L0J1dHRvbj4KCjxSZXZlYWwgQ2xhc3M9ImZ1bGwiIElkPSJleGFtcGxlTW9kYWw4Ij4KCTxwPk9IIEknTSBTTyBGVVVVVUxMPC9wPgoJPGltZyBzcmM9Imh0dHBzOi8vcGxhY2VraXR0ZW4uY29tLzE5MjAvMTI4MCIgYWx0PSJJbnRyb3NwZWN0aXZlIENhZ2UiPgo8L1JldmVhbD4=" />

        <Button data-open="exampleModal8">Click me for a full modal</Button>
        <OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal Class="full" Id="exampleModal8">
            <p>OH I'M SO FUUUULL</p>
            <img src="https://placekitten.com/1920/1280" alt="Introspective Cage">
        </OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal>
        <hr />
    </SectionLeft>
</SectionWrapper>

<SectionWrapper>
    <SectionLeft>
        <h2>Advanced Options</h2>
        <h3>No Overlay</h3>
        <p>To remove the overlay, add the attribute <Code>Overlay="false"</Code> to the modal.</p>

        <HighlightCS Language="html" Full="true" HeaderIcon="mdi-language-html5" HeaderBGcolor="#5d2b90" HeaderTitle="Razor"
                     Content="PEJ1dHRvbiBEYXRhVG9nZ2xlPSJleGFtcGxlTW9kYWw5Ij5DbGljayBtZSBmb3IgYW4gb3ZlcmxheS1sYWNraW5nIG1vZGFsPC9CdXR0b24+Cgo8UmV2ZWFsIElkPSJleGFtcGxlTW9kYWw5IiBPdmVybGF5PSJmYWxzZSI+Cgk8cD5JIGZlZWwgc28gZnJlZSE8L3A+CjwvUmV2ZWFsPg==" />

        <Button DataToggle="exampleModal9">Click me for an overlay-lacking modal</Button>

        <OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal Id="exampleModal9" Overlay="false">
            <p>I feel so free!</p>
        </OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal>
        <hr />
    </SectionLeft>
</SectionWrapper>

<SectionWrapper>
    <SectionLeft>
        <h2>Animations</h2>
        <p>To use animations from the Motion UI library, include the <Code>AnimationIn="someAnimationIn"</Code> and <Code>AnimationOut="someAnimationOut"</Code> attributes. If you want to adjust the speed or timing, include it the attributes like <Code>AnimationIn="someAnimationIn fast"</Code>.</p>

        <HighlightCS Language="html" Full="true" HeaderIcon="mdi-language-html5" HeaderBGcolor="#5d2b90" HeaderTitle="Razor"
                     Content="PEJ1dHRvbiBEYXRhVG9nZ2xlPSJhbmltYXRlZE1vZGFsMTAiPkNsaWNrIG1lIGZvciBhIG1vZGFsPC9CdXR0b24+Cgo8UmV2ZWFsIElkPSJhbmltYXRlZE1vZGFsMTAiIEFuaW1hdGlvbkluPSJzcGluLWluIiBBbmltYXRpb25PdXQ9InNwaW4tb3V0Ij4KCTxoMT5XaG9hLCBJJ20gZGl6enkhPC9oMT4KCTxwIGNsYXNzPSJsZWFkIj5UaGVyZSBhcmUgbWFueSBvcHRpb25zIGZvciBhbmltYXRpbmcgbW9kYWxzLCBjaGVjayBvdXQgdGhlIE1vdGlvbiBVSSBsaWJyYXJ5IHRvIHNlZSB0aGVtIGFsbDwvcD4KPC9SZXZlYWw+" />

        <Button DataToggle="animatedModal10">Click me for a modal</Button>

        <OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal Id="animatedModal10" AnimationIn="spin-in" AnimationOut="spin-out">
            <h1>Whoa, I'm dizzy!</h1>
            <p class="lead">There are many options for animating modals, check out the Motion UI library to see them all</p>
        </OpenCodeDev.Blazor.Foundation.Components.Containers.Reveal>
        <hr />
    </SectionLeft>
</SectionWrapper>

<SectionWrapper>
    <SectionLeft>
        <h2>Reveal Controller</h2>
        <p>It's another way for make easily and quickly modal with C#. For more check the <NavLink href="/reveal-controller">Reveal Controller</NavLink> documentation's page in category Plugins.</p>
    </SectionLeft>
</SectionWrapper>

@code {
    public string MaterialIconSiteLink { get; set; } = "https://pictogrammers.github.io/@mdi/font/5.4.55/";

}
