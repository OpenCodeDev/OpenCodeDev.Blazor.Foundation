@using Microsoft.JSInterop;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Web;
@inject IJSRuntime JSRuntime;
@using OpenCodeDev.Blazor.Foundation.Components.Controls;

<div class="@($"reveal {Class}")" id="@Id" @attributes="AdditionalAttributes" data-reveal data-close-on-click="@CloseOnClick.ToString().ToLower()" data-animation-in="@AnimationIn" data-animation-out="@AnimationOut" data-overlay="@Overlay.ToString()">
    <div class="topbar">
        @if (TitleIcon != null)
        {
            <span class="mdi @(TitleIcon)" style="font-size: 1.4em; float: left;"></span>
        }
        <span style=" margin-top: 0.3em; margin-left: 0.3em;">@Title</span>

    </div>
    <div style=" padding: 1em;">
        @ChildContent
    </div>
    @if (CloseXButton)
    {
        <button class="@CloseClass" data-close aria-label="Close reveal" type="button">
            <span aria-hidden="true">&times;</span>
        </button>
    }

    @if (PrimaryButtonTitle != null || SecondaryButtonTitle != null)
    {
        <div style="min-height: 3.6em; padding: 0.5em 1.3em 0.5em 1.3em; border-top: 1px solid #dee2e6; border-top-left-radius: calc(.3rem - 1px); border-top-right-radius: calc(.3rem - 1px);">
            <ButtonGroup style="@ButtonGroupStyle">
                @if (PrimaryButtonTitle != null)
                {
                    <Button DataToggle="@PrimaryButtonDataToggle"
                            Class="@PrimaryButtonClass"
                            Id="@PrimaryButtonId"
                            style="@PrimaryButtonStyle"
                            @onclick="async ()=> await OnPrimaryClick()">
                        @PrimaryButtonTitle.ToString()
                    </Button>
                }
                @if (SecondaryButtonTitle != null)
                {
                    <Button DataToggle="@SecondaryButtonDataToggle"
                            Class="@SecondaryButtonClass"
                            Id="@SecondaryButtonId"
                            style="@SecondaryButtonStyle"
                            @onclick="async ()=> await OnSecondaryClick()">
                        @SecondaryButtonTitle.ToString()
                    </Button>
                }
            </ButtonGroup>

        </div>
    }


</div>

@code {
    
}

