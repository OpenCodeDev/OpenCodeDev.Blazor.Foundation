@inherits NewComponentBase

@using Microsoft.JSInterop;
@using Newtonsoft.Json.Linq;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Forms;
@using Microsoft.AspNetCore.Components.Web;
@using OpenCodeDev.Blazor.Foundation.Components.Plugins.Blazor;
@inject IJSRuntime JSRuntime;

@*<InputNumber Value="@Value" ValueChanged="(float nVal)=> SliderValueChanged(nVal)" ValueExpresion="() => Value"  id="@($"{@Id.ToString()}-input")" class="is-hidden" />*@

<div id="@Id" class="@($"slider {(IsDisabled() ? "disabled" : "")} " +
                       $"{(IsVertical && !Class.Contains("vertical") ? "vertical" : "")} " +
                       $"{Class}")"
     data-slider data-initial-start="@Value.ToString()" data-vertical="@IsVertical.ToString().ToLower()"
     data-start="@Min.ToString()" data-step="@Step.ToString()" data-end="@Max.ToString()" @attributes="AdditionalAttributes">

    <span class="slider-handle" data-slider-handle role="slider" tabindex="1" aria-controls="@($"{Id}-input")"></span>
    <span class="slider-fill" data-slider-fill></span>
</div>
@if (!HasExtInput) { <input type="hidden" id="@($"{Id}-input")" @bind="@Value" @bind:event="oninput" /> }
@code {

}

