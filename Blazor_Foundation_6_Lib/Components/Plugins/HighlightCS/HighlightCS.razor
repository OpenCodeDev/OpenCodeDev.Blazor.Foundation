@using Microsoft.JSInterop;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Web;
@using OpenCodeDev.Blazor.Foundation.Components.Plugins.Clipboard;
@inject IJSRuntime JS;
@inject IClipboard clip;

<pre style="@($"position: relative;white-space: nowrap;padding-top: 1.6em;margin-bottom:1em;") ">
@if (HeaderIsReady)
{
<div class="hljs-header" style="@($"{(HeaderBGcolor != null ? $"background-color:{HeaderBGcolor};":"")}")">
@if (clip != null)
{
@if (HeaderIcon != null)
{
<span class="@($" mdi {HeaderIcon} hljs-header-title")" style="@($"{(HeaderIconColor != null ? $"color:{HeaderIconColor};":"")}")"></span>
}
@if (HeaderTitle != null)
{
<span class="hljs-header-title" style="@($"{(HeaderTitleColor != null ? $"color:{HeaderTitleColor};":"")}")">@HeaderTitle</span>
}
<span class="mdi @CopyIcon hljs-header-copy" style="@($"{(CopyIconColor != null ? $"color:{CopyIconColor};":"")}")"
@onclick="@(async ()=> {
if (CopyBusy) { Console.WriteLine("Copy Button is busy."); return; }
CopyBusy = true;
CopyIcon = "mdi-spin";
StateHasChanged();
await clip.SetText(JS,DecodedContent );
CopyIcon = "mdi-check";
StateHasChanged();
await Task.Delay(1000);
CopyIcon = "mdi-content-copy";
CopyBusy = false;
StateHasChanged();
})">
</span>
}
</div>
}
<code id="@Id" class="@($"language-{Language}")" style="@($"{(Full ? $"width:100%;": "width: fit-content;")} white-space: break-spaces;")">@DecodedContent</code></pre>

@code {

}
