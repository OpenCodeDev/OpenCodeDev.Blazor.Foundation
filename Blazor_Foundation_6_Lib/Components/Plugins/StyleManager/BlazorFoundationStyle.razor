@using Components.Plugins.StyleManager;
@using OpenCodeDev.Blazor.Foundation.Extensions
@inject IStyleManagement StyleManagement;
@implements IDisposable; 
<style>
    @(":root {")
        @foreach (var themeVar in Style)
        {
            @($"{themeVar.Key}:{themeVar.Value};")
        }
    @("}")
</style>



@code{     

    private Dictionary<string, string> Style { get; set; } = new Dictionary<string, string>();
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Populate();
        StyleManagement.OnUpdate += Populate;
    }

    private async Task Populate()
    {
        Style.Clear();
        foreach (var prop in StyleManagement.GetAll())
        {
            Style.Add(prop.Key, StyleManagement.Get(prop.Key));
        }
        StateHasChanged();
    }

    public void Dispose()
    {
        StyleManagement.OnUpdate -= Populate;
    }
}